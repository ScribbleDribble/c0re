#define PIC_MAIN_START_INDEX 32
#define IRQ0 32

#define PIC_SECONDARY_START_INDEX 40
#define IRQ9 40

#define PIC_MAIN_PORT 0x20
#define PIC_SECONDARY_PORT 0xA0

#define PIC_SUCCESS_CODE 0x20
#define PIC_IRQ_COUNT 8

// irq - interrupt generated by hardware to request for cpu time/attention 
// PIC (programmable interrupt controller) sends interrupt signals
// to cpu. 

// 2 PICs - main and secondary. Each have 8 slots, allowing them to recv 8 signals
// secondary pic IRQs (9-15) will send signal to main PIC on its 2 IRQ slot.
// The main PIC containing IRQs (0-8) is directly connected to the CPU.
// note that when IRQ 9-15 is fired, IRQ 2 will also be fired. 

// the cpu will then try to handle the irq with an appropriate isr and then
// it will write a value back into the PIC's cmd register (0x20) signalling that the operation
// was a success.

// used to declare an external function defined in irq.asm 
extern void _irq0();

void irq_remap();
